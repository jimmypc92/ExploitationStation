#include "ExploitationFoundation.h"

#define PIPE_NAME  "\\\\.\\pipe\\abcdefgh"

DWORD cleanup(DWORD error);

char buffer[1024];
HANDLE pipe;

int main(void) {
	DWORD res;
	res = openInjectionServer(PIPE_NAME);

	if (res) {
		printf("Error in openInjectionServer.\n");
		cleanup(0);
		return res;
	}

	pipe = CreateFileA(PIPE_NAME, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, NULL);

	if (pipe == INVALID_HANDLE_VALUE) {
		printf("Could not open pipe.\n");
		return cleanup(GetLastError());
	}

	DWORD fSuccess, written, read;

	while (true) {
		fSuccess = ReadFile(pipe, buffer, 1024, &read, NULL);

		if (!fSuccess) {
			printf("Error reading from named pipe.\n");
			return cleanup(GetLastError());
		}

		if (!strcmp(buffer, TERMINATE_SEQUENCE)) {
			printf("Server is terminating communication.\n");
			break;
		}
		
		printf("*** Message from Server***\n");
		printf("%s\n", buffer);

		printf("How would you like to respond?\n");
		scanf("%s", buffer);

		fSuccess = WriteFile(pipe, buffer, 1024, &written, NULL);

		if (!fSuccess) {
			printf("Error writing to named pipe.\n");
			return cleanup(GetLastError());
		}

		res = FlushFileBuffers(pipe);

		if (!res) {
			printf("Flushing pipe buffer failed.");
			return cleanup(GetLastError());
		}
	}

	res = closeInjectionServer(NULL);

	if (res) {
		printf("Error in closeInjectionServer.\n");
		cleanup(0);
		return res;
	}

	cleanup(0);
	return 0;
}

DWORD cleanup(DWORD error) {
	if (pipe != INVALID_HANDLE_VALUE) {
		CloseHandle(pipe);
		pipe = INVALID_HANDLE_VALUE;
	}

	 closeInjectionServer(NULL);

	return error;
}